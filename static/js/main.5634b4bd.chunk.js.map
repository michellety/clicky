{"version":3,"sources":["components/About/About.js","components/Card/Card.js","components/Header/Header.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["About","react_default","a","createElement","className","Card","props","onClick","handleShuffle","alt","image","src","Header","Wrapper","Object","assign","App","state","animals","score","highScore","clicked","id","_this","includes","setState","concat","toConsumableArray","sort","Math","random","renderCard","map","_ref","components_Card_Card","key","components_Header_Header","components_About_About","this","components_Wrapper_Wrapper","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"s5BAaeA,MAVf,WACI,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,yDACAF,EAAAC,EAAAC,cAAA,qDCGGE,MARf,SAAcC,GACZ,OACEL,EAAAC,EAAAC,cAAA,OAAKI,QAASD,EAAME,cAAeJ,UAAU,QAC3CH,EAAAC,EAAAC,cAAA,OAAKM,IAAKH,EAAMI,MAAOC,IAAKL,EAAMI,gBCOzBE,MAVf,WAGE,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,wCCASU,MALf,SAAiBP,GACb,OAAOL,EAAAC,EAAAC,cAAA,OAAAW,OAAAC,OAAA,CAAMX,UAAU,WAAcE,YC6E1BU,oNArEbC,MAAQ,CAENC,UACAC,MAAO,EACPC,UAAW,EACXC,QAAS,MAKXb,cAAgB,SAACc,GACVC,EAAKN,MAAMI,QAAQG,SAASF,GAS/BC,EAAKE,SAAS,CACZN,MAAO,EACPE,QAAS,KATXE,EAAKE,SAAS,CACZN,MAAOI,EAAKN,MAAME,MAAQ,EAE1BE,QAAO,GAAAK,OAAAZ,OAAAa,EAAA,EAAAb,CAAMS,EAAKN,MAAMI,SAAjB,CAA0BC,IACjCF,UAAWG,EAAKN,MAAME,MAAQ,EAAII,EAAKN,MAAMG,UAAYG,EAAKN,MAAME,MAAQ,EAAII,EAAKN,MAAMG,YAQ/FG,EAAKE,SAAS,CACZP,QAASA,EAAQU,KAAK,kBAAMC,KAAKC,SAAW,UAKhDC,WAAa,WAEX,OAAOR,EAAKN,MAAMC,QAAQc,IAAI,SAAAC,GAAmB,IAAhBX,EAAgBW,EAAhBX,GAAIZ,EAAYuB,EAAZvB,MAInC,OACET,EAAAC,EAAAC,cAAC+B,EAAD,CAEE1B,cAAe,kBAAMe,EAAKf,cAAcc,IACxCZ,MAAOA,EACPyB,IAAKb,+EAQX,OAEErB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiC,EAAD,MACAnC,EAAAC,EAAAC,cAACkC,EAAD,MACApC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,UACUkC,KAAKrB,MAAME,MADrB,kBAEcmB,KAAKrB,MAAMG,WAEzBnB,EAAAC,EAAAC,cAACoC,EAAD,KACGD,KAAKP,sBA9DES,IAAMC,YCJxBC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5634b4bd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./About.css\";\n\nfunction About() {\n    return (\n        <div className=\"about\">\n            <h1>Safari Animals</h1>\n            <h2>Click each image only once to gain a point.</h2>\n            <h2>Repeat an image and start over!</h2>\n        </div>\n    )\n}\n\nexport default About;","import React from 'react';\nimport \"./Card.css\";\n\nfunction Card(props) {\n  return (\n    <div onClick={props.handleShuffle} className=\"card\">\n      <img alt={props.image} src={props.image} />\n    </div>\n  );\n}\n\nexport default Card;\n\n\n","import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header() {\n\n  //return the JSX that should be rendered \n  return (\n    <div className=\"header\">\n      <h1>Clicky Memory Game</h1>\n    </div>\n  );\n}\n\nexport default Header;\n\n","import React from 'react';\nimport \"./Wrapper.css\";\n\nfunction Wrapper(props) {\n    return <main className=\"wrapper\" {...props} />;\n}\n\n\nexport default Wrapper;","//import dependencies \nimport React from \"react\";\nimport About from \"./components/About/About\";\nimport Card from \"./components/Card/Card\";\nimport Header from \"./components/Header/Header\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport animals from \"./animals.json\";\nimport \"./App.css\";\n\n\nclass App extends React.Component {\n  //state in reference to the animals.json \n  state = {\n    //naming  the object property the same as the variable \n    animals,\n    score: 0,\n    highScore: 0,\n    clicked: []\n  };\n\n  //function to shuffle images and increment score\n\n  handleShuffle = (id) => {\n    if (!this.state.clicked.includes(id)) {\n      // still playing\n      this.setState({\n        score: this.state.score + 1,\n        //adds the id to the array of clicked images\n        clicked: [...this.state.clicked, id],\n        highScore: this.state.score + 1 > this.state.highScore ? this.state.score + 1 : this.state.highScore\n      });\n    } else {\n      this.setState({\n        score: 0,\n        clicked: [],\n      });\n    }\n    this.setState({\n      animals: animals.sort(() => Math.random() - 0.5),\n    });\n  }\n\n\n  renderCard = () => {\n\n    return this.state.animals.map(({ id, image }) => {\n\n      // const { id, image } = animal;\n      //object destructuring \n      return (\n        <Card\n          //id is animal.id\n          handleShuffle={() => this.handleShuffle(id)}\n          image={image}\n          key={id}\n        />\n      )\n    })\n\n  }\n\n  render() {\n    return (\n\n      <div>\n        <Header />\n        <About />\n        <div className=\"scores\">\n          Score: {this.state.score}  |\n          Top Score: {this.state.highScore}\n        </div>\n        <Wrapper>\n          {this.renderCard()}\n        </Wrapper>\n\n      </div>\n\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}